// <auto-generated />
using System;
using GG_LabOps_Infrastructure.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GG_LabOps_Infrastructure.Migrations
{
    [DbContext(typeof(ApiDataContext))]
    [Migration("20240415172523_v1.0.0")]
    partial class v100
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GG_LabOps_Domain.Entities.BrandEquipament", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("EquipamentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentId");

                    b.ToTable("TB_MarcaEquipamento", (string)null);
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.Equipament", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("datetime2");

                    b.Property<string>("Hostname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inventory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("LaboratoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LaboratoryId");

                    b.ToTable("TB_Equipamento", (string)null);
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.Laboratory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EquipamentId")
                        .HasColumnType("bigint");

                    b.Property<string>("KeyOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TB_Laboratorio", (string)null);
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.ModelEquipament", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EquipamentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModelNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentId");

                    b.ToTable("TB_ModeloEquipamento", (string)null);
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.TypeEquipament", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("EquipamentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipamentId");

                    b.ToTable("TB_TipoEquipamento", (string)null);
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.BrandEquipament", b =>
                {
                    b.HasOne("GG_LabOps_Domain.Entities.Equipament", "Equipament")
                        .WithMany("BrandEquipament")
                        .HasForeignKey("EquipamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipament");
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.Equipament", b =>
                {
                    b.HasOne("GG_LabOps_Domain.Entities.Laboratory", "Laboratory")
                        .WithMany("Equipament")
                        .HasForeignKey("LaboratoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratory");
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.ModelEquipament", b =>
                {
                    b.HasOne("GG_LabOps_Domain.Entities.Equipament", "Equipament")
                        .WithMany("ModelEquipament")
                        .HasForeignKey("EquipamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipament");
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.TypeEquipament", b =>
                {
                    b.HasOne("GG_LabOps_Domain.Entities.Equipament", "Equipament")
                        .WithMany("TypeEquipament")
                        .HasForeignKey("EquipamentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipament");
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.Equipament", b =>
                {
                    b.Navigation("BrandEquipament");

                    b.Navigation("ModelEquipament");

                    b.Navigation("TypeEquipament");
                });

            modelBuilder.Entity("GG_LabOps_Domain.Entities.Laboratory", b =>
                {
                    b.Navigation("Equipament");
                });
#pragma warning restore 612, 618
        }
    }
}
