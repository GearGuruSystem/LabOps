// <auto-generated />
using System;
using LabOps.Infra.Data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LabOps.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240626121636_V1.0.1")]
    partial class V101
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdCaracteristicaTipo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_Descricao");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Tb_CaracteristicaTipo", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaTipoTipoEquipamento", b =>
                {
                    b.Property<int>("IdCaracteristicaTipo")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdCaracteristicaTipo");

                    b.Property<int>("IdTipoEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdTipoEquipamento");

                    b.HasKey("IdCaracteristicaTipo", "IdTipoEquipamento");

                    b.HasIndex("IdTipoEquipamento");

                    b.ToTable("Tb_CaracteristicaTipoTipoEquipamento", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaValor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdCaracteristicaValor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_UsuarioAtualizaco");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_Valor");

                    b.HasKey("Id");

                    b.ToTable("Tb_CaracteristicaValor", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Equipamento", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Cl_IdEquipamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<int>("IdFabricante")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdFabricante");

                    b.Property<int>("IdSituacao")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdSituacao");

                    b.Property<int>("IdTipoEquipamento")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdTipoEquipamento");

                    b.Property<long>("LaboratorioId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Cl_Nome");

                    b.Property<string>("UsuarioInsercao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cl_UsuarioInsercao");

                    b.HasKey("Id");

                    b.HasIndex("IdFabricante");

                    b.HasIndex("IdSituacao");

                    b.HasIndex("IdTipoEquipamento");

                    b.HasIndex("LaboratorioId");

                    b.ToTable("Tb_Equipamento", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.EquipamentoCaracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdEquipmanetoCaracteristicas");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<int>("IdCaracteristicaTipo")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdCaracteristicaTipo");

                    b.Property<int?>("IdCaracteristicaValor")
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdCaracteristicaValor");

                    b.Property<long>("IdEquipamento")
                        .HasColumnType("bigint")
                        .HasColumnName("Cl_IdEquipamentos");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.Property<string>("ValorIndividual")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_ValorIndividual");

                    b.HasKey("Id");

                    b.HasIndex("IdCaracteristicaTipo");

                    b.HasIndex("IdCaracteristicaValor");

                    b.HasIndex("IdEquipamento");

                    b.ToTable("Tb_EquipamentoCaracteristica", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdFabricante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Cl_Nome");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Tb_Fabricante", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Laboratorio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Cl_IdLaboratorio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("ChaveResponsavel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cl_ChaveDoResponsavel");

                    b.Property<long>("IdEquipamento")
                        .HasColumnType("bigint")
                        .HasColumnName("Cl_IdEquipamentos");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Cl_Nome");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.Property<string>("UsuarioResponsavel")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Cl_UsuarioResponsavel");

                    b.HasKey("Id");

                    b.ToTable("Tb_Laboratorio", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Situacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdSituacao");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_Situacao");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Tb_Situacao", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.TipoEquipamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Cl_IdTipoEquipamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AtualizadoEm")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("Cl_AtualizadoEm");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("Cl_Descricao");

                    b.Property<string>("UsuarioAtualizacao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Cl_UsuarioAtualizacao");

                    b.HasKey("Id");

                    b.ToTable("Tb_TipoEquipamento", (string)null);
                });

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaTipoTipoEquipamento", b =>
                {
                    b.HasOne("LabOps.Domain.Entities.CaracteristicaTipo", "CaracteristicaTipo")
                        .WithMany("CaracteristicaTipoTipoEquipamentos")
                        .HasForeignKey("IdCaracteristicaTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabOps.Domain.Entities.TipoEquipamento", "TipoEquipamento")
                        .WithMany("CaracteristicaTipoTipoEquipamentos")
                        .HasForeignKey("IdTipoEquipamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaracteristicaTipo");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Equipamento", b =>
                {
                    b.HasOne("LabOps.Domain.Entities.Fabricante", "Fabricante")
                        .WithMany("Equipamentos")
                        .HasForeignKey("IdFabricante")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LabOps.Domain.Entities.Situacao", "Situacao")
                        .WithMany("Equipamentos")
                        .HasForeignKey("IdSituacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LabOps.Domain.Entities.TipoEquipamento", "TipoEquipamento")
                        .WithMany("Equipamentos")
                        .HasForeignKey("IdTipoEquipamento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("LabOps.Domain.Entities.Laboratorio", "Laboratorio")
                        .WithMany("Equipamentos")
                        .HasForeignKey("LaboratorioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");

                    b.Navigation("Laboratorio");

                    b.Navigation("Situacao");

                    b.Navigation("TipoEquipamento");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.EquipamentoCaracteristica", b =>
                {
                    b.HasOne("LabOps.Domain.Entities.CaracteristicaTipo", "CaracteristicaTipo")
                        .WithMany("EquipamentoCaracteristicas")
                        .HasForeignKey("IdCaracteristicaTipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LabOps.Domain.Entities.CaracteristicaValor", "CaracteristicaValor")
                        .WithMany("EquipamentoCaracteristicas")
                        .HasForeignKey("IdCaracteristicaValor");

                    b.HasOne("LabOps.Domain.Entities.Equipamento", "Equipamento")
                        .WithMany("EquipamentoCaracteristicas")
                        .HasForeignKey("IdEquipamento")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CaracteristicaTipo");

                    b.Navigation("CaracteristicaValor");

                    b.Navigation("Equipamento");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaTipo", b =>
                {
                    b.Navigation("CaracteristicaTipoTipoEquipamentos");

                    b.Navigation("EquipamentoCaracteristicas");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.CaracteristicaValor", b =>
                {
                    b.Navigation("EquipamentoCaracteristicas");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Equipamento", b =>
                {
                    b.Navigation("EquipamentoCaracteristicas");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Fabricante", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Laboratorio", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.Situacao", b =>
                {
                    b.Navigation("Equipamentos");
                });

            modelBuilder.Entity("LabOps.Domain.Entities.TipoEquipamento", b =>
                {
                    b.Navigation("CaracteristicaTipoTipoEquipamentos");

                    b.Navigation("Equipamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
